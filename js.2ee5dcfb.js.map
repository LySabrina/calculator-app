{"version":3,"sources":["main/js/calculator.js","main/js/index.js"],"names":["calculator","total","firstNum","secondNum","currOperator","add","num1","num2","sub","multiply","divide","Error","operate","operator","console","log","checkNumInit","result","undefined","error","setCurrOperator","setFirstNum","val","setSecondNum","getFirstNum","getSecondNum","getOperator","setOperator","getPrevOperator","prevOperator","getTotal","reset","countDecimal","numAsStr","String","indexOf","substr","substring","length","cleanUpDeciaml","toFixed","_default","exports","default","_calculator","_interopRequireDefault","require","obj","__esModule","display","document","querySelector","textContent","calInputs","equal","getElementById","sound","soundEffect","Audio","inputNum","themeSelector","onclick","e","target","tagName","themeVal","value","classTemplate","concat","body","className","addEventListener","play","btn","regex","test","handleNumInputs","handleOperators","num","Number","currentTotal"],"mappings":"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","file":"js.2ee5dcfb.js","sourceRoot":"../src","sourcesContent":["/**\n * Module Pattern Object - Basically Singleton\n * There is always one instance of calculator within the app.\n */\nconst calculator = (function () {\n  let total = 0;\n  let firstNum = 0;\n  let secondNum;\n  let currOperator;\n\n  const add = (num1, num2) => num1 + num2;\n  const sub = (num1, num2) => num1 - num2;\n  const multiply = (num1, num2) => num1 * num2;\n  const divide = (num1, num2) => {\n    if (num2 == 0) {\n      throw new Error(\"Cannot divide by 0\");\n    }\n    return num1 / num2;\n  };\n  //all operator return result after two numebrs\n\n  const operate = (operator) => {\n    currOperator = operator;\n    console.log(\"Current operator \" + currOperator);\n    console.log(\"1st num \" + firstNum);\n    console.log(\"2nd nUm \" + secondNum);\n\n    if (checkNumInit()) {\n      return;\n    }\n\n    switch (operator) {\n      case \"add\":\n        const result = add(firstNum, secondNum);\n        total = result;\n        firstNum = total;\n        secondNum = undefined;\n        break;\n\n      case \"sub\":\n        total = sub(firstNum, secondNum);\n        firstNum = total;\n        console.log(\"sub rsutl \" + total);\n        secondNum = undefined;\n        break;\n\n      case \"multiply\":\n        total = multiply(firstNum, secondNum);\n        firstNum = total;\n        console.log(\"multiply result - \" + total);\n        secondNum = undefined;\n        break;\n\n      case \"divide\":\n        try {\n          total = divide(firstNum, secondNum);\n          firstNum = total;\n          secondNum = undefined;\n        } catch (error) {\n          console.log(\"error caught\");\n          firstNum = 0;\n          total = \"Cannot divide by zero\";\n        }\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const setCurrOperator = (operator) => (currOperator = operator);\n  const setFirstNum = (val) => (firstNum = val);\n  const setSecondNum = (val) => (secondNum = val);\n  const getFirstNum = () => firstNum;\n  const getSecondNum = () => secondNum;\n  const getOperator = () => currOperator;\n  const setOperator = (operator) => (currOperator = operator);\n  const getPrevOperator = () => prevOperator;\n  const checkNumInit = () => {\n    if (firstNum === undefined || secondNum === undefined) {\n      return true;\n    }\n    return false;\n  };\n\n  const getTotal = () => total;\n  const reset = () => {\n    total = 0;\n    firstNum = 0;\n    secondNum = undefined;\n  };\n\n  const countDecimal = () => {\n    const numAsStr = String(total);\n    if (numAsStr.indexOf(\".\") != -1) {\n      const substr = numAsStr.substring(numAsStr + 1);\n      return substr.length;\n    } else {\n      return 0;\n    }\n  };\n\n  const cleanUpDeciaml = () => {\n    if (countDecimal() > 0) {\n      total = total.toFixed(2);\n    }\n  };\n  return {\n    operate,\n    getTotal,\n    reset,\n    setFirstNum,\n    setSecondNum,\n    getFirstNum,\n    getSecondNum,\n    getOperator,\n    getPrevOperator,\n    setOperator,\n  };\n})();\n\nexport default calculator;\n","import calculator from \"./calculator.js\";\n\nconst display = document.querySelector(\".calculator__display\");\ndisplay.textContent = calculator.getFirstNum();\nconst calInputs = document.querySelector(\".calculator__inputs\");\nconst equal = document.getElementById(\"equal\");\n\nconst sound = require(\"../../assets/audio/button-click.wav\");\n\nconst soundEffect = new Audio(sound);\n\nlet inputNum = \"\"; //Number inputed when user clicks on num buttons\n\nconst themeSelector = document.querySelector(\".theme-switcher__btns\");\n\nthemeSelector.onclick = (e) => {\n  if (e.target.tagName === \"INPUT\") {\n    const themeVal = e.target.value;\n    const classTemplate = `${themeVal}-theme`;\n    const body = document.body;\n    body.className = classTemplate;\n  }\n};\n\ncalInputs.addEventListener(\"click\", (e) => {\n  if (e.target.tagName == \"BUTTON\") {\n    soundEffect.play();\n  }\n});\n\n/**\n * Handling the number btns and operator onclick event\n * Will update firstNum and secondNum inside calculator\n */\ncalInputs.addEventListener(\"click\", (e) => {\n  const btn = e.target;\n  const regex = /[0-9\\.]/;\n  if (btn === calInputs) {\n    console.log(\"clicked on parent\");\n    return;\n  }\n  if (regex.test(btn.value)) {\n    handleNumInputs(btn);\n  } else {\n    handleOperators(btn);\n  }\n});\n\n/**\n * Handles a button click by getting the value and appending that value into inputNum variable\n * Afterwards, proceed to update calculator firstNum or secondNum\n * @param {HTMLButtonElement} btn\n */\nfunction handleNumInputs(btn) {\n  const value = btn.value;\n  if (value === \".\") {\n    if (inputNum.indexOf(\".\") === -1) {\n      inputNum += btn.value;\n    }\n  } else {\n    inputNum += btn.value;\n  }\n  display.textContent = inputNum;\n  const num = Number(display.textContent);\n  if (\n    calculator.getOperator() === undefined ||\n    calculator.getOperator() === \"equal\"\n  ) {\n    //using old value of input result\n    calculator.setFirstNum(num);\n  } else {\n    calculator.setSecondNum(num);\n  }\n\n  console.log(\"index 1st num \", calculator.getFirstNum());\n  console.log(\"index 2nd num \", calculator.getSecondNum());\n}\n\n/**\n * Handles btn elements that has operators values & non-numbers\n * @param {HTMLButtonElement} btn\n */\nfunction handleOperators(btn) {\n  const value = btn.value;\n  switch (value) {\n    case \"equal\":\n      if (\n        calculator.getFirstNum() !== undefined ||\n        calculator.getSecondNum() !== undefined\n      ) {\n        console.log(\"operationsss\", calculator.getOperator());\n\n        //Now that we have both firstNum and secondNum defined with values, we call the calculator operation\n        calculator.operate(calculator.getOperator());\n        const result = calculator.getTotal();\n        console.log(\"total - \" + result);\n        display.textContent = result;\n        //delete?\n        calculator.setOperator(\"equal\"); //we set our operator of calculator to equal now because, a user can proceed to start a brand new calculation or continue from their previous result\n        console.log(\"inputNum\" + inputNum);\n        inputNum = \"\";\n        //inputNum is being added to and stil lholds the other value\n      }\n      break;\n\n    case \"delete\":\n      inputNum = inputNum.substring(0, inputNum.length - 1);\n      if (inputNum === \"\") {\n        inputNum = \"0\";\n      }\n      display.textContent = inputNum;\n      const num = Number(display.textContent);\n\n      if (\n        calculator.getOperator() === undefined ||\n        calculator.getOperator() == \"equal\"\n      ) {\n        //using old value of input result\n        calculator.setFirstNum(num);\n      } else {\n        calculator.setSecondNum(num);\n      }\n      break;\n\n    case \"reset\":\n      inputNum = \"\";\n      display.textContent = \"0\";\n      calculator.setFirstNum(0);\n      calculator.setSecondNum(undefined);\n      calculator.setOperator(undefined);\n      break;\n\n    default:\n      inputNum = \"\";\n      if (calculator.getOperator() != undefined) {\n        calculator.operate(calculator.getOperator());\n        const currentTotal = calculator.getFirstNum(); //why firstNum instead of total? Because inside calculator, the firstNum will equal to the newly operation total. Total variable may still ho\n        display.textContent = currentTotal;\n      }\n      const operator = value;\n      calculator.setOperator(operator);\n      // const operator = value;\n      // calculator.operate(operator);\n\n      // if (calculator.getOperator() != undefined) {\n      //   const currentTotal = calculator.getFirstNum(); //why firstNum instead of total? Because inside calculator, the firstNum will equal to the newly operation total. Total variable may still ho\n      //   display.textContent = currentTotal;\n      // }\n\n      break;\n  }\n}\n"]}